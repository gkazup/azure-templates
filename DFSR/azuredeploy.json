{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region to deploy the resources into"
      },
      "defaultValue": "[resourceGroup().location]"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "zupinet.local"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "zupiadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RA-GRS"
      ]
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the Public IP Address"
      },
      "defaultValue": "dfsr01"
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "Base URL for Marketplace",
        "artifactsBaseUrl": ""
      },
      "defaultValue": "https://raw.githubusercontent.com/gkazup/azure-templates/master/DFSR"
    }
  },
  "variables": {
    "apiVersion": "2016-01-01",
    "storageAccountNamePrefix": "zupinet",
    "storageAccountNames": {
      "dc": "[concat(variables('storageAccountNamePrefix'), 'dc', substring(uniquestring(resourceGroup().id), 0, 4))]",
      "dfsr": "[concat(variables('storageAccountNamePrefix'), 'dfsr', substring(uniquestring(resourceGroup().id), 0, 4))]",
      "fs": "[concat(variables('storageAccountNamePrefix'), 'fs', substring(uniquestring(resourceGroup().id), 0, 4))]",
      "diag": "[concat(variables('storageAccountNamePrefix'), 'diag', substring(uniquestring(resourceGroup().id), 0, 4))]"
    },

    "dcVMSize": "Standard_DS1",
    "dfsrVMSize": "Standard_DS1",
    "fsVMSize": "Standard_DS1",

    "virtualNetworkName": "dfsr-test-vnet-01",
    "virtualNetworkAddressRange": "10.0.0.0/16",
    "subnetNames": {
      "GatewaySubnetName": "GatewaySubnet",
      "dcSubnetName": "internal-dc-subnet",
      "dfsrSubnetName": "internal-dfsr-subnet",
      "fsSubnetname": "internal-fs-subnet"
    },
    "subnets": [
      {
        "name": "[variables('subnetNames').GatewaySubnetName]",
        "properties": {
          "addressPrefix": "10.0.60.0/27"
        }
      },
      {
        "name": "[variables('subnetNames').dcSubnetName]",
        "properties": {
          "addressPrefix": "10.0.0.0/24"
        }
      },
      {
        "name": "[variables('subnetNames').fsSubnetname]",
        "properties": {
          "addressPrefix": "10.0.4.0/24"
        }
      },
      {
        "name": "[variables('subnetNames').dfsrSubnetName]",
        "properties": {
          "addressPrefix": "10.0.1.0/24"
        }
      }
    ],
    "adPDCNICIPAddress": "10.0.0.4",
    "RDPNAT": "RDP",
    "rdpIPAddressName": "rdpIP",

    "lbSettings": {
      "rdpLBFE": "rdpLBFE",
      "adLBBE": "adLBBE",
      "rdpLBName": "rdpLoadBalancer"
    },

    "vmSettings": {
      "availabilitySets": {
        "fsAvailabilitySetName": "fsAvailabilitySet"
      },
      "noOffsRoleVMs": 2,
      "vmContainerName": "vhds",
      "adPDCVMName": "temp-dc-001",
      "dfsrVMName": "temp-dfsr-001",
      "fsVMName": "temp-fs-00",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2012-R2-Datacenter",
      "rdpPort": 3389,
      "windowsDiskSize": 128,
      "fsDiskSize": 1000,
      "dfsrDiskSize": 128
    },

    "prefix": "[tolower(trim(subString(concat(parameters('dnsPrefix'),'           '),0,10)))]",
    "fsSharePath": "[concat(variables('prefix'),'-fs')]",

    "adPDCNicName": "[concat(variables('vmSettings').adPDCVMName,'-nic')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "dcSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').dcSubnetName)]",
    "dfsrSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').dfsrSubnetName)]",
    "fsSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').fsSubnetName)]",

    "ids": {
      "adNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
      "fsAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.fsAvailabilitySetName)]"
    },
    "derivedIds": {
      "adIPConfigID": "[concat(variables('ids').adNicId,'/ipConfigurations/ipconfig1')]",
      "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
      "adRDPNATRuleID": "[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
      "adBEAddressPoolID": "[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]"
    },

    "configuration": {
      "vnetSetupURL": "[concat(parameters('baseUrl'),'/nested/creatingVNET.json')]",
      "vnetwithDNSTemplateURL": "[concat(parameters('baseUrl'),'/nested/vnet-with-dns-server.json')]",
      "creatingNicsUrl": "[concat(parameters('baseUrl'),'/nested/creatingNICS.json')]",
      "rdpIPAdressSetupURL": "[concat(parameters('baseUrl'),'/nested/publicip-rdp.json')]",
      "availabilitySetSetupURL": "[concat(parameters('baseUrl'),'/nested/availabilitySets.json')]",
      "creatingStorageAccounts": "[concat(parameters('baseUrl'),'/nested/creatingStorageAccounts.json')]",
      "provisioningPrimaryDCURL": "[concat(parameters('baseUrl'),'/nested/provisioningPrimaryDomainController.json')]",
      "adPDCModulesURL": "[concat(variables('assetLocation'),'/CreateADPDC.ps1.zip')]",
      "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
      "provisioningFSVMsURL": "[concat(parameters('baseUrl'),'/nested/provisioningFSVMs.json')]",
      "configuringFSVirtualMachinesUrl": "[concat(parameters('baseUrl'),'/nested/configuringFSVMs.json')]",
      "fsConfigurationModulesURL": "[concat(variables('assetLocation'),'/ConfigureFileShare.ps1.zip')]",
      "fsConfigurationFunction": "ConfigureFileShare.ps1\\ConfigureFileShare",
      "provisioningDFSRVMUrl": "[concat(parameters('baseUrl'),'/nested/provisioningDFSRVM.json')]",
      "configuringDFSRVMUrl": "[concat(parameters('baseUrl'),'/nested/configuringDFSRVM.json')]",
      "dfsrConfigurationModulesURL": "[concat(variables('assetLocation'),'/ConfigureDFSR.ps1.zip')]",
      "dfsrConfigurationFunction": "ConfigureDFSR.ps1\\ConfigureDFSR"
    },
    "assetLocation": "[concat(parameters('baseUrl'),'/scripts')]"
  },

  "resources": [
    {
      "name": "CreatingStorageAccounts",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingStorageAccounts]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountNames": {
            "value": "[variables('storageAccountNames')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },
    {
      "name": "SettingUpRdp",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').rdpIPAdressSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "rdpIPAddressName": {
            "value": "[variables('rdpIPAddressName')]"
          },
          "rdpLBName": {
            "value": "[variables('lbSettings').rdpLBName]"
          },
          "rdpLBFE": {
            "value": "[variables('lbSettings').rdpLBFE]"
          },
          "adLBBE": {
            "value": "[variables('lbSettings').adLBBE]"
          },
          "RDPNAT": {
            "value": "[variables('RDPNAT')]"
          },
          "rdplbFEConfigID": {
            "value": "[variables('derivedIds').rdplbFEConfigID]"
          }
        }
      }
    },
    {
      "name": "CreatingAvailabilitySets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').availabilitySetSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "fsAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.fsAvailabilitySetName]"
          }
        }
      }
    },
    {
      "name": "CreatingVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingVirtualNetwork",
        "Microsoft.Resources/deployments/SettingUpRdp"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingNicsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "adPDCNICIPAddress": {
            "value": "[variables('adPDCNICIPAddress')]"
          },
          "adSubnetRef": {
            "value": "[variables('dcSubnetRef')]"
          },
          "adBEAddressPoolID": {
            "value": "[variables('derivedIds').adBEAddressPoolID]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('derivedIds').adRDPNATRuleID]"
          },
          "dfsrVMName": {
            "value": "[variables('vmSettings').dfsrVMName]"
          },
          "dfsrSubnetRef": {
            "value": "[variables('dfsrSubnetRef')]"
          },
          "fsVMName": {
            "value": "[variables('vmSettings').fsVMName]"
          },
          "fsSubnetRef": {
            "value": "[variables('fsSubnetRef')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningPrimaryADDomainController",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccounts",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets",
        "Microsoft.Resources/deployments/SettingUpRdp"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningPrimaryDCURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNames').ad]"
          },
          "diagAccountName": {
            "value": "[variables('storageAccountNames').diag]"
          },
          "availabilitySet": {
            "value": "[variables('ids').adAvailabilitySetName]"
          },
          "adVMSize": {
            "value": "[variables('dcVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "windowsImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "windowsImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "windowsImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adPDCConfigurationFunction": {
            "value": "[variables('configuration').adPDCConfigurationFunction]"
          },
          "adPDCModulesURL": {
            "value": "[variables('configuration').adPDCModulesURL]"
          }
        }
      }
    },
    {
      "name": "UpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningPrimaryADDomainController"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[variables('adPDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "ProvisioningFSVirtualMachines",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccounts",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningFSVMsURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "fsVMName": {
            "value": "[variables('vmSettings').fsVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNames').fs]"
          },
          "diagAccountName": {
            "value": "[variables('storageAccountNames').diag]"
          },
          "availabilitySet": {
            "value": "[variables('ids').fsAvailabilitySetName]"
          },
          "fsVMSize": {
            "value": "[variables('fsVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "windowsImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "windowsImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "windowsImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          }
        }
      }
    },
    {
      "name": "ConfiguringFSVirtualMachines",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingDNSwithPrimaryADVM",
        "Microsoft.Resources/deployments/ProvisioningFSVirtualMachines"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringFSVirtualMachinesUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "fsVMName": {
            "value": "[variables('vmSettings').fsVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sharePath": {
            "value": "[variables('fsSharePath')]"
          },
          "fsConfigurationModulesURL": {
            "value": "[variables('configuration').fsConfigurationModulesURL]"
          },
          "fsConfigurationFunction": {
            "value": "[variables('configuration').fsConfigurationFunction]"
          },
          "DNSServer": {
            "value": "[variables('adPDCNICIPAddress')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningDFSRVirtualMachine",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccounts",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningDFSRVMUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('vmSettings').dfsrVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountNames').dfsr]"
          },
          "diagAccountName": {
            "value": "[variables('storageAccountNames').diag]"
          },
          "VMSize": {
            "value": "[variables('dfsrVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "windowsImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "windowsImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "windowsImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          }
        }
      }
    },
    {
      "name": "ConfiguringDFSRVirtualMachine",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingDNSwithPrimaryADVM",
        "Microsoft.Resources/deployments/ProvisioningDFSRVirtualMachine"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringDFSRVMUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMName": {
            "value": "[variables('vmSettings').dfsrVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sharePath": {
            "value": "[variables('fsSharePath')]"
          },
          "ConfigurationModulesURL": {
            "value": "[variables('configuration').dfsrConfigurationModulesURL]"
          },
          "ConfigurationFunction": {
            "value": "[variables('configuration').dfsrConfigurationFunction]"
          },
          "DNSServer": {
            "value": "[variables('adPDCNICIPAddress')]"
          }
        }
      }
    }
  ],
   "outputs": {
   }
}
