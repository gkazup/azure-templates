{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region to deploy the resources into"
      },
      "defaultValue": "[resourceGroup().location]"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "ghdazure.local"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service account name"
      },
      "defaultValue": "sqlservice"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service account password"
      }
    },
    "sharePointSetupUserAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The Sharepoint Setup account name"
      },
      "defaultValue": "sp_setup"
    },
    "sharePointSetupUserAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Setup account password"
      }
    },
    "sharePointFarmAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The Sharepoint Farm account name"
      },
      "defaultValue": "sp_farm"
    },
    "sharePointFarmAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Farm account password"
      }
    },
    "sharePointFarmPassphrasePassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Farm Passphrase"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RA-GRS"
      ]
    },
    "spWebIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "The new IP address name for SP Web "
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the Public IP Address for the Sharepoint Web Application"
      }
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "Base URL for Marketplace",
        "artifactsBaseUrl": ""
      },
      "defaultValue": "https://raw.githubusercontent.com/gkazup/azure-templates/master/GHD-Azure-POC"
    }
  },
  "variables": {
    "apiVersion": "2016-01-01",
    "storageAccountNamePrefix": "ghdnet",
    "storageAccountnames": {
      "ad": "[concat(variables('storageAccountNamePrefix'), 'ad', substring(uniquestring(resourceGroup().id), 0, 4))]",
      "sql": "[concat(variables('storageAccountNamePrefix'), 'sql', substring(uniquestring(resourceGroup().id), 0, 4))]",
      "web": "[concat(variables('storageAccountNamePrefix'), 'web', substring(uniquestring(resourceGroup().id), 0, 4))]",
      "app": "[concat(variables('storageAccountNamePrefix'), 'app', substring(uniquestring(resourceGroup().id), 0, 4))]",
      "fs": "[concat(variables('storageAccountNamePrefix'), 'fs', substring(uniquestring(resourceGroup().id), 0, 4))]",
      "diag": "[concat(variables('storageAccountNamePrefix'), 'diag', substring(uniquestring(resourceGroup().id), 0, 4))]"
    },
    "sharepointFarmName": "spfarm",
    "spSiteTemplateName": "STS#0",

    "adVMSize": "Standard_DS1",
    "sqlVMSize": "Standard_DS3",
    "witnessVMSize": "Standard_DS1",
    "spVMSize": "Standard_DS2",
    "fsVMSize": "Standard_DS2",

    "spCADNSPrefix": "[concat(parameters('dnsPrefix'),'admin')]",
    "spCAIPAddressName": "[concat(parameters('spWebIPAddressName'),'admin')]",
    "configDatabaseName": "SP_Config",
    "administrationContentDatabaseName": "SP_AdminContent",
    "contentDatabaseName": "SP_Content",

    "virtualNetworkName": "ghdnet-irl-prod-vnet-01",
    "virtualNetworkAddressRange": "10.0.0.0/16",
    "subnetNames": {
      "GatewaySubnetName": "GatewaySubnet",
      "adSubnetName": "internal-ad-subnet",
      "fsSubnetname": "internal-fs-subnet",
      "sqlSubnetName": "internal-sql-subnet",
      "spWebSubnetName": "internal-web-subnet",
      "spAppSubnetName": "internal-app-subnet"
    },
    "subnets": [
      {
        "name": "[variables('subnetNames').GatewaySubnetName]",
        "properties": {
          "addressPrefix": "10.0.60.0/27"
        }
      },
      {
        "name": "[variables('subnetNames').adSubnetName]",
        "properties": {
          "addressPrefix": "10.0.0.0/24"
        }
      },
      {
        "name": "[variables('subnetNames').fsSubnetname]",
        "properties": {
          "addressPrefix": "10.0.4.0/24"
        }
      },
      {
        "name": "[variables('subnetNames').sqlSubnetName]",
        "properties": {
          "addressPrefix": "10.0.1.0/24"
        }
      },
      {
        "name": "[variables('subnetNames').spWebSubnetName]",
        "properties": {
          "addressPrefix": "10.0.2.0/24"
        }
      },
      {
        "name": "[variables('subnetNames').spAppSubnetName]",
        "properties": {
          "addressPrefix": "10.0.3.0/24"
        }
      }
    ],
    "adPDCNICIPAddress": "10.0.0.4",
    "adBDCNICIPAddress": "10.0.0.5",
    "sqlLBIPAddress": "10.0.1.50",

    "lbSettings": {
      "rdpLBFE": "rdpLBFE",
      "sqlLBFE": "sqlLBFE",
      "spWebLBFE": "spWebLBFE",
      "spCALBFE": "spCALBFE",
      "adLBBE": "adLBBE",
      "sqlLBBE": "sqlLBBE",
      "spWebLBBE": "spWebLBBE",
      "spCALBBE": "spCALBBE",
      "spWebLB": "spWeb",
      "spCALB": "spCALB",
      "sqlLBName": "sqlLoadBalancer",
      "rdpLBName": "rdpLoadBalancer",
      "spWebLBName": "spWebLoadBalancer",
      "spCALBName": "spCALoadBalancer"
    },
    "RDPNAT": "RDP",
    "spCANAT": "spCANAT",
    "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
    "spWebProbe": "spWebProbe",
    "spWebProbePort": 8088,
    "rdpIPAddressName": "rdpIP",
    "vmSettings": {
      "availabilitySets": {
        "adAvailabilitySetName": "adAvailabilitySet",
        "spAppAvailabilitySetName": "spAppAvailabilitySet",
        "spWebAvailabilitySetName": "spWebAvailabilitySet",
        "sqlAvailabilitySetName": "sqlAvailabilitySet",
        "fsAvailabilitySetName": "fsAvailabilitySet"
      },
      "noOfSqlVMs": 2,
      "noOfspRoleVMs": 2,
      "vmContainerName": "vhds",
      "adPDCVMName": "t-10-dc-001",
      "adBDCVMName": "t-10-dc-002",
      "sqlVMName": "t-10-sql-00",
      "sqlwVMName": "t-10-sqlw-003",
      "spwebVMName": "t-10-web-00",
      "spappVMName": "t-10-srp-00",
      "fsVMName": "t-10-fs-00",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2012-R2-Datacenter",
      "sqlImagePublisher": "MicrosoftSQLServer",
      "sqlImageOffer": "SQL2014-WS2012R2",
      "sqlImageSKU": "Enterprise",
      "spImagePublisher": "MicrosoftSharePoint",
      "spImageOffer": "MicrosoftSharePointServer",
      "spImageSKU": "2013",
      "rdpPort": 3389,
      "spCentralAdminPort": 80,
      "windowsDiskSize": 128,
      "sqlDiskSize": 1000,
      "fsDiskSize": 1000,
      "spDiskSize": 128
    },
    "prefix": "[tolower(trim(subString(concat(parameters('dnsPrefix'),'           '),0,10)))]",
    "sqlAOEPName": "[concat(variables('prefix'),'-hadr')]",
    "sqlAOAGName": "[concat(variables('prefix'),'-ag')]",
    "sqlAOListenerName": "[concat(variables('prefix'),'ag-listener')]",
    "sharePath": "[concat(variables('prefix'),'-fsw')]",
    "clusterName": "[concat(variables('prefix'),'-fc')]",
    "adPDCNicName": "[concat(variables('vmSettings').adPDCVMName,'-nic')]",
    "adBDCNicName": "[concat(variables('vmSettings').adBDCVMName,'-nic')]",
    "sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "adSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').adSubnetName)]",
    "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
    "spWebSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spWebSubnetName)]",
    "spAppSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spAppSubnetName)]",
    "fsSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').fsSubnetName)]",
    "spWebResourceIdnew": "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),parameters('spWebIPAddressName'))]",
    "sharepointCAfqdn": "[concat(variables('spCADNSPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "sharepointWebfqdn": "[concat(parameters('dnsPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "ids": {
      "adNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
      "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
      "spWeblbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spWebLBName)]",
      "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
      "spCAlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spCALBName)]",
      "spCAResourceId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('spCAIPAddressName'))]",
      "adAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.adAvailabilitySetName)]",
      "sqlAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.sqlAvailabilitySetName)]",
      "spWebAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.spWebAvailabilitySetName)]",
      "spAppAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.spAppAvailabilitySetName)]"
    },
    "derivedIds": {
      "adIPConfigID": "[concat(variables('ids').adNicId,'/ipConfigurations/ipconfig1')]",
      "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
      "spWebLBFEConfigID": "[concat(variables('ids').spWeblbID,'/frontendIPConfigurations/',variables('lbSettings').spWebLBFE)]",
      "adRDPNATRuleID": "[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
      "adBEAddressPoolID": "[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]",
      "spWebProbeID": "[concat(variables('ids').spWeblbID,'/probes/',variables('spWebProbe'))]",
      "spWebBEAddressPoolID": "[concat(variables('ids').spWeblbID,'/backendAddressPools/',variables('lbSettings').spWebLBBE)]",
      "sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
      "sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
      "sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]",
      "spCABEAddressPoolID": "[concat(variables('ids').spCAlbID,'/backendAddressPools/',variables('lbSettings').spCALBBE)]",
      "spCAlbFEConfigID": "[concat(variables('ids').spCAlbID,'/frontendIPConfigurations/',variables('lbSettings').spCALBFE)]",
      "spCANATRuleID": "[concat(variables('ids').spCAlbID,'/inboundNatRules/',variables('spCANAT'))]"
    },

    "configuration": {
      "vnetwithDNSTemplateURL": "[concat(parameters('baseUrl'),'/nested/vnet-with-dns-server.json')]",
      "nicTemplateURL": "[concat(parameters('baseUrl'),'/nested/nic.json')]",
      "adPDCModulesURL": "[concat(variables('assetLocation'),'/CreateADPDC.ps1.zip')]",
      "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
      "adBDCPreparationModulesURL": "[concat(variables('assetLocation'),'/PrepareADBDC.ps1.zip')]",
      "adBDCPreparationFunction": "PrepareADBDC.ps1\\PrepareADBDC",
      "adBDCConfigurationModulesURL": "[concat(variables('assetLocation'),'/ConfigureADBDC.ps1.zip')]",
      "adBDCConfigurationFunction": "ConfigureADBDC.ps1\\ConfigureADBDC",
      "fswConfigurationModulesURL": "[concat(variables('assetLocation'),'/ConfigureFileShareWitness.ps1.zip')]",
      "fswConfigurationFunction": "ConfigureFileShareWitness.ps1\\ConfigureFileShareWitness",
      "fswPreparationModulesURL": "[concat(variables('assetLocation'),'/PrepareFileShareWitness.ps1.zip')]",
      "fswPreparationFunction": "PrepareFileShareWitness.ps1\\PrepareFileShareWitness",
      "sqlAOPrepareModulesURL": "[concat(variables('assetLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
      "sqlAOPrepareFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
      "sqlAOConfigurationModulesURL": "[concat(variables('assetLocation'),'/ConfigureAlwaysOnSqlServer.ps1.zip')]",
      "sqlAOConfigurationFunction": "ConfigureAlwaysOnSqlServer.ps1\\ConfigureAlwaysOnSqlServer",
      "prepareClusterModulesURL": "[concat(variables('assetLocation'),'/PrepareFailoverCluster.ps1.zip')]",
      "prepareClusterConfigurationFunction": "PrepareFailoverCluster.ps1\\PrepareFailoverCluster",
      "configureClusterModulesURL": "[concat(variables('assetLocation'),'/ConfigureFailoverCluster.ps1.zip')]",
      "configureClusterConfigurationFunction": "ConfigureFailoverCluster.ps1\\ConfigureFailoverCluster",
      "spConfigurationModulesURL": "[concat(variables('assetLocation'),'/ConfigureSharePointServerHA.ps1.zip')]",
      "spConfigurationFunction": "ConfigureSharePointServerHA.ps1\\ConfigureSharePointServerHA",
      "spPreparationModulesURL": "[concat(variables('assetLocation'),'/PrepareSharePointServerHA.ps1.zip')]",
      "spPreparationFunction": "PrepareSharePointServerHA.ps1\\PrepareSharePointServerHA",
      "spWebIPAdressSetupURL": "[concat(parameters('baseUrl'),'/nested/publicip-','new.json')]",
      "spCAIPAdressSetupURL": "[concat(parameters('baseUrl'),'/nested/publicip-','new.json')]",
      "rdpIPAdressSetupURL": "[concat(parameters('baseUrl'),'/nested/publicip-rdp.json')]",
      "availabilitySetSetupURL": "[concat(parameters('baseUrl'),'/nested/availabilitySets.json')]",
      "provisioningPrimaryDCURL": "[concat(parameters('baseUrl'),'/nested/provisioningPrimaryDomainController.json')]",
      "provisioningBackupDCURL": "[concat(parameters('baseUrl'),'/nested/provisioningBackupDomainController.json')]",
      "configuringBackupDCURL": "[concat(parameters('baseUrl'),'/nested/configuringBackupDomainController.json')]",
      "configuringSQLAlwaysOnClusterUrl": "[concat(parameters('baseUrl'),'/nested/configuringSQLAlwaysOnCluster.json')]",
      "provisioningSharepointVMsURL": "[concat(parameters('baseUrl'),'/nested/provisioningSharepointVMs.json')]",
      "configuringSharepointUrl": "[concat(parameters('baseUrl'),'/nested/configuringSharePoint.json')]",
      "creatingStorageAccounts": "[concat(parameters('baseUrl'),'/nested/creatingStorageAccounts.json')]",
      "provisioningSQLVMsURL": "[concat(parameters('baseUrl'),'/nested/provisioningSQLVMs.json')]",
      "vnetSetupURL": "[concat(parameters('baseUrl'),'/nested/vnet-new.json')]",
      "setupLBsUrl": "[concat(parameters('baseUrl'),'/nested/setupLBs.json')]",
      "creatingNicsUrl": "[concat(parameters('baseUrl'),'/nested/creatingNICS.json')]"
    },
    "assetLocation": "[concat(parameters('baseUrl'),'/scripts')]"
  },

  "resources": [
    {
      "name": "CreatingStorageAccounts",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingStorageAccounts]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storageAccountNamePrefix')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },
    {
      "name": "SettingUpRdp",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').rdpIPAdressSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "rdpIPAddressName": {
            "value": "[variables('rdpIPAddressName')]"
          },
          "rdpLBName": {
            "value": "[variables('lbSettings').rdpLBName]"
          },
          "rdpLBFE": {
            "value": "[variables('lbSettings').rdpLBFE]"
          },
          "adLBBE": {
            "value": "[variables('lbSettings').adLBBE]"
          },
          "RDPNAT": {
            "value": "[variables('RDPNAT')]"
          },
          "rdplbFEConfigID": {
            "value": "[variables('derivedIds').rdplbFEConfigID]"
          }
        }
      }
    },
    {
      "name": "SettingUpSharepointWebPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').spWebIPAdressSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('spWebIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "dynamic"
          },
          "dnsPrefix": {
            "value": "[parameters('dnsPrefix')]"
          }
        }
      }
    },
    {
      "name": "SettingUpSharepointCentralAdminPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').spCAIPAdressSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[variables('spCAIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "dynamic"
          },
          "dnsPrefix": {
            "value": "[variables('spCADNSPrefix')]"
          }
        }
      }
    },
    {
      "name": "CreatingAvailabilitySets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').availabilitySetSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.adAvailabilitySetName]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
          },
          "spWebAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.spWebAvailabilitySetName]"
          },
          "spAppAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.spAppAvailabilitySetName]"
          },
          "fsAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.fsAvailabilitySetName]"
          }
        }
      }
    },
    {
      "name": "CreatingVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "SettingUpLoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpSharepointCentralAdminPublicIP",
        "Microsoft.Resources/deployments/SettingUpSharepointWebPublicIP",
        "Microsoft.Resources/deployments/SettingUpRdp",
        "Microsoft.Resources/deployments/CreatingVirtualNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').setupLBsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "spCALBName": {
            "value": "[variables('lbSettings').spCALBName]"
          },
          "spCALBFE": {
            "value": "[variables('lbSettings').spCALBFE]"
          },
          "spCAResourceId": {
            "value": "[variables('ids').spCAResourceId]"
          },
          "spCALBBE": {
            "value": "[variables('lbSettings').spCALBBE]"
          },
          "spCANAT": {
            "value": "[variables('spCANAT')]"
          },
          "spCAlbFEConfigID": {
            "value": "[variables('derivedIds').spCAlbFEConfigID]"
          },
          "spWebLBName": {
            "value": "[variables('lbSettings').spWebLBName]"
          },
          "spWebLBFE": {
            "value": "[variables('lbSettings').spWebLBFE]"
          },
          "spWebResourceId": {
            "value": "[variables('spWebResourceIdnew')]"
          },
          "spWebLBBE": {
            "value": "[variables('lbSettings').spWebLBBE]"
          },
          "spWebLB": {
            "value": "[variables('lbSettings').spWebLB]"
          },
          "spWebLBFEConfigID": {
            "value": "[variables('derivedIds').spWebLBFEConfigID]"
          },
          "spWebBEAddressPoolID": {
            "value": "[variables('derivedIds').spWebBEAddressPoolID]"
          },
          "spWebProbeID": {
            "value": "[variables('derivedIds').spWebProbeID]"
          },
          "spWebProbe": {
            "value": "[variables('spWebProbe')]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBFE": {
            "value": "[variables('lbSettings').sqlLBFE]"
          },
          "sqlLBIPAddress": {
            "value": "[variables('sqlLBIPAddress')]"
          },
          "sqlSubnetRef": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlLBBE": {
            "value": "[variables('lbSettings').sqlLBBE]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedIds').sqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedIds').sqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[variables('SQLAOProbe')]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingVirtualNetwork",
        "Microsoft.Resources/deployments/SettingUpRdp",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingNicsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "adPDCNICIPAddress": {
            "value": "[variables('adPDCNICIPAddress')]"
          },
          "adSubnetRef": {
            "value": "[variables('adSubnetRef')]"
          },
          "adBEAddressPoolID": {
            "value": "[variables('derivedIds').adBEAddressPoolID]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('derivedIds').adRDPNATRuleID]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "adBDCNICIPAddress": {
            "value": "[variables('adBDCNICIPAddress')]"
          },
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "sqlSubnetRef": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "spwebVMName": {
            "value": "[variables('vmSettings').spwebVMName]"
          },
          "spWebSubnetRef": {
            "value": "[variables('spWebSubnetRef')]"
          },
          "spWebBEAddressPoolID": {
            "value": "[variables('derivedIds').spWebBEAddressPoolID]"
          },
          "spappVMName": {
            "value": "[variables('vmSettings').spappVMName]"
          },
          "spAppSubnetRef": {
            "value": "[variables('spAppSubnetRef')]"
          },
          "spCABEAddressPoolID": {
            "value": "[variables('derivedIds').spCABEAddressPoolID]"
          },
          "spCANATRuleID": {
            "value": "[variables('derivedIds').spCANATRuleID]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "fsVMName": {
            "value": "[variables('vmSettings').fsVMName]"
          },
          "fsSubnetRef": {
            "value": "[variables('fsSubnetRef')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningPrimaryADDomainController",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccounts",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets",
        "Microsoft.Resources/deployments/SettingUpRdp"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningPrimaryDCURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountnames').ad]"
          },
          "diagAccountName": {
            "value": "[variables('storageAccountnames').diag]"
          },
          "availabilitySet": {
            "value": "[variables('ids').adAvailabilitySetName]"
          },
          "adVMSize": {
            "value": "[variables('adVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "windowsImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "windowsImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "windowsImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adPDCConfigurationFunction": {
            "value": "[variables('configuration').adPDCConfigurationFunction]"
          },
          "adPDCModulesURL": {
            "value": "[variables('configuration').adPDCModulesURL]"
          }
        }
      }
    },
    {
      "name": "UpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningPrimaryADDomainController"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[variables('adPDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "ProvisioningBackupADDomainController",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccounts",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningBackupDCURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountnames').ad]"
          },
          "diagAccountName": {
            "value": "[variables('storageAccountnames').diag]"
          },
          "availabilitySet": {
            "value": "[variables('ids').adAvailabilitySetName]"
          },
          "adVMSize": {
            "value": "[variables('adVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "windowsImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "windowsImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "windowsImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "DNSServer": {
            "value": "[variables('adPDCNICIPAddress')]"
          },
          "adBDCPreparationFunction": {
            "value": "[variables('configuration').adBDCPreparationFunction]"
          },
          "adBDCPreparationModulesURL": {
            "value": "[variables('configuration').adBDCPreparationModulesURL]"
          }
        }
      }
    },
    {
      "name": "ConfiguringBackupADDomainController",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningBackupADDomainController",
        "Microsoft.Resources/deployments/UpdatingDNStoPrimaryADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringBackupDCURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adBDCConfigurationFunction": {
            "value": "[variables('configuration').adBDCConfigurationFunction]"
          },
          "adBDCConfigurationModulesURL": {
            "value": "[variables('configuration').adBDCConfigurationModulesURL]"
          }
        }
      }
    },
    {
      "name": "UpdatingDNSwithBackupADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringBackupADDomainController"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[variables('adPDCNICIPAddress')]",
              "[variables('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    }
  ],
   "outputs": {
     "fqdn": {
       "value": "[variables('sharepointWebfqdn')]",
       "type": "string"
     },
     "cafqdn":{
        "value":"[variables('sharepointCAfqdn')]",
        "type": "string"
     }
   }
}
